name: Test & Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test PDF Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Install Dependencies
        run: |
          yarn install
      
      - name: Run Tests
        run: |
          mkdir -p ./test-results/junit && ./node_modules/.bin/jest --ci --runInBand --reporters=default --reporters=jest-junit
      - name: Code Coverage
        run: |
          mkdir -p $HOME/project/build/service-pdf
          ./node_modules/.bin/jest --ci --runInBand --collectCoverage=true
          cp -a ./coverage $HOME/project/build/service-pdf
      
      - name: Upload Junit
        uses: actions/upload-artifact@v2
        with:
          name: junit
          path: |
            test-results/junit
      - name: Upload Coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: |
            build/service-pdf/

  build:
    name: "Build & Push Containers"
    runs-on: ubuntu-latest
    needs: test
    outputs:
      tag: ${{ steps.bump_version.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Extract branch name
        run: echo BRANCH_NAME=${{ github.head_ref }} >> $GITHUB_ENV
        id: extract_branch
      - uses: unfor19/install-aws-cli-action@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SHARED }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SHARED }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/shared-ci
          role-duration-seconds: 3600
          role-session-name: GitHubActions

      - name: Build Container
        run: |
          docker build --file Dockerfile --tag pdf_service:latest .

      - name: Bump version
        id: bump_version
        uses: anothrNick/github-tag-action@1.33.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.0
          DEFAULT_BUMP: minor
          PRERELEASE_SUFFIX: ${{ env.BRANCH_NAME }}
          RELEASE_BRANCHES: main
          WITH_V: true
      
      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: 311462405659
      
      - name: Push Container
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          PDF_SERVICE_ECR_REPOSITORY: pdf_service
        run: |
          docker tag pdf_service:latest $ECR_REGISTRY/$PDF_SERVICE_ECR_REPOSITORY:latest
          docker tag pdf_service:latest $ECR_REGISTRY/$PDF_SERVICE_ECR_REPOSITORY:${{ steps.bump_version.outputs.tag }}
          if [ $BRANCH_NAME == "main" ]; then
            # We want all of the tags pushed
            docker push $ECR_REGISTRY/$PDF_SERVICE_ECR_REPOSITORY
          else
            docker push $ECR_REGISTRY/$PDF_SERVICE_ECR_REPOSITORY:${{ steps.bump_version.outputs.tag }}
          fi
      
  push-tags:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SHARED }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SHARED }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::997462338508:role/shared-ci
          role-duration-seconds: 3600
          role-session-name: GitHubActions

      - name: Install AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1

      - name: Push Tag to Parameter Store
        run: |
          aws ssm put-parameter --name "opg-pdf-service-latest-green-build" --type "String" --value "${{ needs.build.outputs.tag}}" --overwrite --region=eu-west-1

      - name: Trigger Dev Deploy
        shell: bash
        run: curl -u ${{ secrets.JENKINS_API_USER }}:${{ secrets.JENKINS_API_TOKEN }} "https://${{ secrets.JENKINS_URL }}/job/Sirius/job/Deploy_to_Development/build?token=${{ secrets.JENKINS_API_TOKEN_NAME }}&cause=Triggered+by+opg-pdf-service"
